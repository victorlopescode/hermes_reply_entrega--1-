-- Schema inicial para armazenamento de leituras de sensores
CREATE TABLE plant (
  plant_id        INTEGER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
  name            VARCHAR2(150) NOT NULL,
  location        VARCHAR2(255),
  description     CLOB
);

CREATE TABLE asset (
  asset_id        INTEGER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
  plant_id        INTEGER REFERENCES plant(plant_id),
  name            VARCHAR2(150) NOT NULL,
  asset_type      VARCHAR2(100),
  installation_date DATE,
  description     CLOB
);

CREATE TABLE sensor (
  sensor_id             INTEGER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
  asset_id              INTEGER REFERENCES asset(asset_id),
  sensor_type           VARCHAR2(50) NOT NULL,
  model                 VARCHAR2(100),
  unit                  VARCHAR2(20),
  min_value             NUMBER,
  max_value             NUMBER,
  sampling_rate_seconds INTEGER DEFAULT 60,
  installed_at          TIMESTAMP DEFAULT CURRENT_TIMESTAMP
);

CREATE TABLE sensor_reading (
  reading_id    NUMBER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
  sensor_id     INTEGER NOT NULL REFERENCES sensor(sensor_id),
  timestamp     TIMESTAMP NOT NULL,
  value         NUMBER NOT NULL,
  quality_flag  SMALLINT DEFAULT 0,
  ingest_source VARCHAR2(100),
  CONSTRAINT uq_sensor_time UNIQUE (sensor_id, timestamp)
);

CREATE TABLE event (
  event_id    INTEGER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
  asset_id    INTEGER REFERENCES asset(asset_id),
  sensor_id   INTEGER REFERENCES sensor(sensor_id),
  event_time  TIMESTAMP NOT NULL,
  event_type  VARCHAR2(100),
  description CLOB,
  reported_by VARCHAR2(100)
);

CREATE TABLE anomaly_label (
  label_id    INTEGER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
  sensor_id   INTEGER REFERENCES sensor(sensor_id),
  start_ts    TIMESTAMP,
  end_ts      TIMESTAMP,
  label_type  VARCHAR2(50) NOT NULL,
  created_by  VARCHAR2(100),
  created_at  TIMESTAMP DEFAULT CURRENT_TIMESTAMP
);

CREATE TABLE sensor_meta (
  meta_id     INTEGER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
  sensor_id   INTEGER REFERENCES sensor(sensor_id),
  param_name  VARCHAR2(100),
  param_value CLOB,
  effective_from TIMESTAMP DEFAULT CURRENT_TIMESTAMP
);
